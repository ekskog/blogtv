name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Define Environment Variables
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          export SHORT_SHA

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u $GITHUB_ACTOR --password ${{ secrets.EK_GITHUB_PAT }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/blogtv
          IMAGE_TAG=$IMAGE_NAME:$SHORT_SHA
          LATEST_TAG=$IMAGE_NAME:latest
          echo "Resolved IMAGE_TAG: $IMAGE_TAG"
          echo "Resolved LATEST_TAG: $LATEST_TAG"
          docker buildx build --platform linux/amd64 -t $IMAGE_TAG -t $LATEST_TAG --push .
      
      - name: Set Up KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG_FILE_CONTENT }}" > kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "KUBECONFIG set to $KUBECONFIG"
                    
      - name: Deploy to Kubernetes
        run: |
          IMAGE_NAME=ghcr.io/ekskog/blogtv
          IMAGE_TAG=$IMAGE_NAME:${{ env.SHORT_SHA }}
          echo "Resolved IMAGE_TAG: $IMAGE_TAG"
          kubectl set image deployment/blogt-frontend blogt-frontend=$IMAGE_TAG --namespace=webapps --kubeconfig=$PWD/kubeconfig.yaml
          kubectl rollout restart deployment/blogt-frontend --namespace=webapps --kubeconfig=$PWD/kubeconfig.yaml
