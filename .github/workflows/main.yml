name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u $GITHUB_ACTOR --password ${{ secrets.EK_GITHUB_PAT }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=ghcr.io/ekskog/blogtv
          IMAGE_TAG=$IMAGE_NAME:$(date +%Y%m%d%H%M%S)
          docker buildx build --platform linux/amd64 -t $IMAGE_TAG -t $IMAGE_NAME:latest --push .

      - name: Set up KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG_FILE_CONTENT }}" > kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "KUBECONFIG set to $KUBECONFIG"
          kubectl config view

      - name: Validate Kubeconfig Creation
        run: |
          grep -v 'certificate-authority-data' kubeconfig.yaml | \
          grep -v 'client-certificate-data' | \
          grep -v 'client-key-data'    
          
      - name: Debug Kubectl Config
        run: |
          kubectl config view --kubeconfig=$PWD/kubeconfig.yaml
                  
      - name: Test Kubernetes API Server
        run: |
          curl -k https://k3s-attic.hbvu.su:6443

      - name: Set Context
        run: |
          kubectl config use-context default --kubeconfig=$PWD/kubeconfig.yaml

      - name: Test Deployment Access
        run: |
          kubectl get deployments --namespace=webapps --kubeconfig=$PWD/kubeconfig.yaml                  
                    
      - name: Deploy to Kubernetes
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/blogtv
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_TAG=$IMAGE_NAME:$TIMESTAMP
          echo "Resolved IMAGE_TAG: $IMAGE_TAG"
          kubectl set image deployment/blogt-frontend app=$IMAGE_TAG --namespace=webapps
          kubectl rollout restart deployment/blogt-frontend --namespace=webapps
    